<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.ReadingMapper">
<!--    <insert id="addReading" parameterType="com.example.demo.pojo.Reading">-->
<!--        insert into reading_comprehension-->
<!--        (title,content,question)-->
<!--        values(#{title},#{content},-->
<!--        #{question,typeHandler=com.example.demo.handler.MySqlJsonHandler})-->
<!--    </insert>-->
    <resultMap id="readingMap" type="Reading">
        <id column="id" property="id"></id>
        <result column="title" property="title"></result>
        <result column="content" property="content"></result>
        <result column="create_time" property="createTime"></result>

        <!--配置集合信息
            property: 集合名称
            ofType: 当前集合中的数据类型
        -->
        <collection property="questions" ofType="ReadingQuestion">
            <id property="id" column="qid"></id>
            <result property="readingId" column="reading_id"></result>
            <result property="title" column="qtitle"></result>
            <result property="answer" column="answer"></result>
            <collection property="options" ofType="ReadingQuestionOption">
                <id property="id" column="oid"></id>
                <result property="questionId" column="question_id"></result>
                <result property="content" column="ocontent"></result>
            </collection>
        </collection>
    </resultMap>

    <select id="getById" resultMap="readingMap">
        select r.id,
               r.title,
               r.content,
               r.create_time,
               q.id as qid,
               q.title as qtitle,
--                q.answer,
               q.reading_id,
               o.id as oid,
               o.content as ocontent,
               o.question_id
        from reading r
        left join reading_question q
        on r.id = q.reading_id
        left join reading_question_option o
        on q.id = o.question_id
        where r.id = #{id}
        order by oid
    </select>

    <select id="getAllById" resultMap="readingMap">
        select r.id,
               r.title,
               r.content,
               r.create_time,
               q.id as qid,
               q.title as qtitle,
               q.answer,
               q.reading_id,
               o.id as oid,
               o.content as ocontent,
               o.question_id
        from reading r
                 left join reading_question q
                           on r.id = q.reading_id
                 left join reading_question_option o
                           on q.id = o.question_id
        where r.id = #{id}
        order by oid
    </select>

    <select id="getAnswerById">
        select q.answer
        from reading r
        left join reading_question q
        on r.id = q.reading_id
        where r.id = #{id}
        order by q.id
    </select>

    <insert id="addReading" parameterType="reading" useGeneratedKeys="true" keyProperty="id">
        insert into reading
        (title,content,create_time)
        values(#{title},#{content},curdate())
    </insert>
    <insert id="editReading" parameterType="reading">
        insert into reading
        (id,title,content)
        values(#{id},#{title},#{content})
    </insert>
    <insert id="addReadingQuestion" useGeneratedKeys="true" keyProperty="id">
        insert into reading_question
        (reading_id,title,answer)
        values
        <foreach item="item" index="index" collection="readingQuestionList" separator=",">
            (#{item.readingId},#{item.title},#{item.answer})
        </foreach>
    </insert>
    <insert id="addReadingQuestionOption">
        insert into reading_question_option
        (question_id,content)
        values
        <foreach item="item" index="index" collection="readingQuestionOptionList" separator=",">
            (#{item.questionId},#{item.content})
        </foreach>
    </insert>

    <delete id="delete">
        delete r,q,o
        from reading r
        left join reading_question q on r.id = q.reading_id
        left join reading_question_option o on q.id = o.question_id
        where r.id = #{id}
    </delete>



</mapper>